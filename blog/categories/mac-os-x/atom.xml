<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Mac OS X | ncatarino.github.io]]></title>
  <link href="http://ncatarino.github.io/blog/categories/mac-os-x/atom.xml" rel="self"/>
  <link href="http://ncatarino.github.io/"/>
  <updated>2013-11-22T18:55:57+00:00</updated>
  <id>http://ncatarino.github.io/</id>
  <author>
    <name><![CDATA[Nuno Catarino]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Making a OS X 10.9 Mavericks Install USB Drive]]></title>
    <link href="http://ncatarino.github.io/archives/1488"/>
    <updated>2013-10-23T00:00:00+01:00</updated>
    <id>http://ncatarino.github.io/archives/making-a-os-x-10-9-mavericks-install-usb-drive</id>
    <content type="html"><![CDATA[<p>Apparently the days of getting new releases of OS X on DVDs is long gone and instead it&#8217;s made available in the App Store. If you&#8217;re upgrading your existing OS X install you probably have no need for physical media to install it but if you&#8217;re willing to do a clean install the .dmg you get from the App Store isn&#8217;t very useful. You&#8217;ll have to make your own physical install media.</p>

<p>I&#8217;ve read about Lion Disk Maker and other extensive ways with multiple steps to build a USB thumb drive capable of installing OS X from scratch. But then I came across a single Terminal command line that does absolutely everything and leaves the USB thumb drive ready to install everything. You&#8217;ll need a comfortably sized drive &#8211; 8GB should be enough. If possible buy a new one and don&#8217;t use it for anything else other than being your OS X install media. First, download Mavericks from the App Store. Then open up a Terminal, plug in your USB drive and type the following &#8211; you can use TAB to autocomplete folder names:</p>

<p><code>bash Making a OS X 10.9 Mavericks Install USB Drive
sudo /Applications/Install\ OS\ X\ Mavericks.app/Contents/Resources/createinstallmedia --volume /Volumes/Untitled --applicationpath /Applications/Install\ OS\ X\ Mavericks.app --nointeraction
</code></p>

<p>Replace <code>/Volumes/Untitled</code> with <code>/Volumes/YourUsbDriveName</code>. Insert your password, wait for some time (I went to get dinner, when I came back ~20 mins later it was still running) and BAM &#8211; Bob&#8217;s your uncle. Reboot, pick booting from the USB drive (hold Option while booting so you can choose) and you&#8217;re good to go.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[OS X Flashback Trojan Identification and Removal]]></title>
    <link href="http://ncatarino.github.io/archives/1199"/>
    <updated>2012-04-05T00:00:00+01:00</updated>
    <id>http://ncatarino.github.io/archives/os-x-flashback-trojan-identification-and-removal</id>
    <content type="html"><![CDATA[<p>Despite what most OS X users think and say, OS X is in fact as vulnerable to trojans and/or rootkits as any other Operating System. Though it is significantly harder (or not) to do so in a Unix machine, the increase in Apple computer users has turned their operating system a viable target for mass infection and botnet operation.</p>

<p>This time around, a trojan named as Flashback has reportedly infected more than half a million computers worldwide. It earned it&#8217;s name due to the nature of the infection, pretending to be an Adobe Flash update and thus being granted administrator privileges by unsuspecting users to download and install it&#8217;s payload.</p>

<p>Apparently the trojan takes advantage of flaws within the Java versions found within latest versions of OS X. Although Oracle published a fix for it several weeks ago, Apple is only just now making it available to it&#8217;s users generating this way a fair amount of controversy.</p>

<p>An advanced description of the trojan as well as identification and removal methods can be found <a href="http://www.f-secure.com/v-descs/trojan-downloader_osx_flashback_i.shtml" target="_blank">here</a>, thanks to the folks at F-Secure.</p>

<p>&nbsp;</p>

<p>Edit: F-Secure has made a tool available online to remove Flashback from OS X machines <a href="http://www.f-secure.com/weblog/archives/00002346.html" target="_blank">here</a>.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[OS X Boot Camp and hal.dll Errors]]></title>
    <link href="http://ncatarino.github.io/archives/693"/>
    <updated>2010-10-04T00:00:00+01:00</updated>
    <id>http://ncatarino.github.io/archives/os-x-boot-camp-and-hal-dll-errors</id>
    <content type="html"><![CDATA[<p>So I made the decision to go back to a 32bit Windows installed on Boot Camp due to some compatibility issues with the Android SDK and flashing tools not recognizing a Samsung Spica, dishing out some weird errors and generally just not finding the device. Done full installs twice before and was about to do the third but then I ran into a problem.</p>

<p>Boot Camp partition made, I start the install process like in any other PC. Delete partition, create partition, format it ntfs, etc, and the install starts. First reboot comes up in the installer for whatever reason it reboots to continue the install process and then this error complaining about hal.dll not there comes up. Ahh crap. Tried it again, same error. Tried downloading an iso and install through it and there it was again. All the while googling around trying to find what the crap was happening. Spent hours trying to figure out what was borking the 2001 Space Odissey computer. Hours you ask? Yes, hours. Well, about two hours.</p>

<!--more-->


<p>Turns out you can&#8217;t delete the partition Boot Camp creates and make a new one. One must resist the urge to delete partition and recreate it like one always does and simply format it ntfs. That did the trick. Can&#8217;t really remember how I installed Windows before but I never ran into this issue so I guess I didn&#8217;t recreate it.</p>

<p>So now you know, if you ever feel like installing or reinstalling Windows on the Boot Camp partition you must be strong with the force and resist the urge to delete and recreate it. Simply format it ntfs on the next screen and you&#8217;re all set to go.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Boot Snow Leopard in Verbose Mode And/or 64 Bits]]></title>
    <link href="http://ncatarino.github.io/archives/678"/>
    <updated>2010-09-14T00:00:00+01:00</updated>
    <id>http://ncatarino.github.io/archives/boot-snow-leopard-in-verbose-mode-andor-64-bits</id>
    <content type="html"><![CDATA[<p style="text-align: justify;">
  <a href="http://ncatarino.net/wp-content/uploads/2010/09/64bit.png"><img class="alignright size-medium wp-image-682" title="64bit" src="http://ncatarino.net/wp-content/uploads/2010/09/64bit-300x162.png" alt="" width="210" height="113" /></a>I&#8217;ve always been a fan of verbose booting screens letting me know what&#8217;s going on while the OS is booting and recently this came to my attention, we can do it on OS X. Booting it once in verbose mode is as simple as holding Command+V when we power it up but if we want it to act like that by default we&#8217;ll have to open a Terminal window and type the following:
</p>


<blockquote><p>sudo nvram boot-args=&#8221;-v&#8221;</p></blockquote>

<p>To disable verbose mode type the following:</p>

<blockquote><p>sudo nvram boot-args=</p></blockquote>

<p>Another option we have on Snow Leopard is booting into 64 bits mode on supported machines, we can hold the 6 and the 4 keys on boot if we want to do it once but if we want it booting into 64 bits by default we&#8217;ll have to follow a few necessary steps.</p>

<p>First of all we&#8217;ll need to know if we have a 64 bit EFI. Issue the following command on a Terminal window:</p>

<blockquote><p>ioreg -l -p IODeviceTree | grep firmware-abi</p></blockquote>

<p>We&#8217;ll either get a &#8220;EFI32&#8243; or a &#8220;EFI64&#8243; result. If we have a 64 bit EFI we&#8217;re good to go.</p>

<p>Find and edit <strong>/Library/Preferences/SystemConfiguration/com.apple.Boot.plist </strong>replacing:</p>

<blockquote><p><key>Kernel Flags</key><br/>
<string></string></p></blockquote>

<p>With</p>

<blockquote><p><key>Kernel Flags</key><br/>
<string>arch=x86_64</string></p></blockquote>

<p>Reboot :)</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Setting Up Time Machine on Ubuntu 10.04]]></title>
    <link href="http://ncatarino.github.io/archives/592"/>
    <updated>2010-09-08T00:00:00+01:00</updated>
    <id>http://ncatarino.github.io/archives/setting-up-time-machine-on-ubuntu-10-04</id>
    <content type="html"><![CDATA[<p>Backups and redundancy are always important when dealing with data you&#8217;re not willing to loose overnight when your hard drives decide it&#8217;s time to meet their maker. Usually Seagate or Western Digital in my case, not that I&#8217;m complaining *knocks on wood*. Mistakes also happen and you&#8217;re bound to eventually delete or somehow damage important data on your hard drive.</p>

<p>Time Machine is a piece of software introduced by Apple when Leopard was launched, it allows us to set up an external or network drive as a backup drive and it backs up data from any given point in time onwards allowing us as well to go &#8220;back in time&#8221; to any given point in the backups.</p>

<p>Recently I&#8217;ve been dabbling a lot with Ubuntu and those of you who know my nerd side know already I&#8217;ve googled the hell out of it trying to maximize and/or improve stuff and I&#8217;ve come across several interesting articles I&#8217;d like to share with whoever reads this. I could just post some links, but that wouldn&#8217;t be fun and some of the links might be taken down leaving me without any source of information in case I want to repeat the process.</p>

<p>On with the interesting part, setting up Ubuntu 10.04 as a Time Machine network drive.</p>

<!--more-->


<p>Ubuntu is able to <em>speak</em> the Apple language when it comes to networking, all we have to do is install the netatalk package and in case we want to be able to dinamically find the server in our finder window for example, the avahi-daemon package.</p>

<blockquote><p>$ sudo apt-get install netatalk avahi-daemon</p></blockquote>

<p>Everything pretty much works right out of the box, we just have to edit a text file describing what directory to use for Time Machine and restart the services.</p>

<p>For this, we will edit <strong>/etc/netatak/AppleVolumes.default</strong> and add the following:</p>

<blockquote><p># By default all users have access to their home directories.<br/>
# ~/ &#8220;Home Directory&#8221;<br/>
/TimeMachine &#8220;TimeMachine&#8221; options:tm</p></blockquote>

<p>This will point netatalk to a directory called TimeMachine in our root filesystem and share it. It <em>can</em> be a directory inside your home dir. Now we have to actually create the directory and give it the correct permissions.</p>

<blockquote><p>$ sudo mkdir /TimeMachine</p>

<p>$ sudo chmod a+rw /TimeMachine</p></blockquote>

<p>Next up, in case we want it showing up on our finder instead of having to connect to it through the &#8220;Connect to Server&#8221; dialog (afp://192.168.ip.ip), we&#8217;ll create a file named <strong>/etc/avahi/services/afpd.service </strong>and add the following content into it:</p>

<blockquote><p><div>
  <div></p>

<pre><code>&lt;div&gt;
  &lt;service-group&gt;
&lt;/div&gt;

&lt;div&gt;
  &lt;name replace-wildcards=&amp;#8221;yes&amp;#8221;&gt;%h&lt;/name&gt;
&lt;/div&gt;

&lt;div&gt;
  &lt;service&gt;
&lt;/div&gt;

&lt;div&gt;
  &lt;type&gt;_afpovertcp._tcp&lt;/type&gt;
&lt;/div&gt;

&lt;div&gt;
  &lt;port&gt;548&lt;/port&gt;
&lt;/div&gt;

&lt;div&gt;
  &lt;/service&gt;
&lt;/div&gt;

&lt;div&gt;
  &lt;service&gt;
&lt;/div&gt;

&lt;div&gt;
  &lt;type&gt;_device-info._tcp&lt;/type&gt;
&lt;/div&gt;

&lt;div&gt;
  &lt;port&gt;0&lt;/port&gt;
&lt;/div&gt;

&lt;div&gt;
  &lt;txt-record&gt;model=Xserve&lt;/txt-record&gt;
&lt;/div&gt;

&lt;div&gt;
  &lt;/service&gt;
&lt;/div&gt;

&lt;div&gt;
  &lt;/service-group&gt;
&lt;/div&gt;
</code></pre>

<p>  </div>
</div></p></blockquote>

<div>
  Next, we&#8217;ll restart the services. I&#8217;m not sure you actually have to restart the avahi-daemon but we&#8217;ll do it anyway.
</div>


<blockquote><p><div>
  $ sudo service avahi-daemon restart
</div></p>

<p><div>
  $ sudo service netatalk restart
</div></p></blockquote>

<div>
  Alternatively, you can:
</div>


<blockquote><p><div>
  $ sudo /etc/init.d/avahi-daemon restart
</div></p>

<p><div>
  $ sudo /etc/init.d/netatalk restart
</div></p></blockquote>

<div>
  Either way works fine.
</div>




<div>
  And that&#8217;s it! That folder is ready to act as a Time Machine network drive for your macs :)
</div>




<div>
  It is advisable to keep the folder with enough space  for your backups, usually something with twice the space of your used space in disk works but the bigger the better since it allows you to go further back in time. Folders used in these screenshots were made for example/test purposes and have nowhere near the required size to effectively act as a Time Machine server.
</div>




<div>
  <a href="http://ncatarino.net/wp-content/uploads/2010/09/screen1.png"><img class="alignnone size-medium wp-image-593" title="Finder Window" src="http://ncatarino.net/wp-content/uploads/2010/09/screen1-300x181.png" alt="The server is visible in your finder window" width="300" height="181" /></a>
</div>




<div>
  <a href="http://ncatarino.net/wp-content/uploads/2010/09/screen2.png"><img class="alignnone size-medium wp-image-594" title="Time Machine Window" src="http://ncatarino.net/wp-content/uploads/2010/09/screen2-300x174.png" alt="The folder is visible in your Time Machine window." width="300" height="174" /></a>
</div>




<div>
  Full credit for this info goes to:
</div>




<div>
  <ul>
    <li>
      <a href="http://sidikahawa.blogspot.com/2010/03/setting-up-time-machine-server-on-my.html" target="_blank">Sidi Kawaha</a>
    </li>
    <li>
      <a href="http://www.kremalicious.com/2008/06/ubuntu-as-mac-file-server-and-time-machine-volume/" target="_blank">kremalicious</a>
    </li>
    <li>
      <a href="http://ubuntuforums.org/" target="_blank">The Ubuntu Forums</a> (too many posts to list here)
    </li>
    <li>
      If you feel your name should be here please press Contact on the top of this page and use it to email me
    </li>
  </ul>
</div>

]]></content>
  </entry>
  
</feed>
